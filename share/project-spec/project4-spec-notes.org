#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:nil c:nil
#+OPTIONS: creator:comment d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t
#+OPTIONS: num:t p:t pri:t prop:nil stat:t tags:t tasks:t tex:t timestamp:t
#+OPTIONS: toc:nil todo:t |:t
#+TITLE: Project 4 Specification Notes
#+DATE: <2015-04-09 Thu>
#+AUTHOR: Sam Gwydir
#+EMAIL: sam@samgwydir.com
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 24.5.1 (Org mode 8.3beta)

#+TOC: headlines 2

\pagebreak

* Dates
** TODO Sprint #1
SCHEDULED: <2015-04-06 Mon>--<2015-04-13 Mon> 
DEADLINE: <2015-04-13 Mon 23:59> 
** TODO Sprint #2
SCHEDULED: <2015-04-13 Mon>--<2015-04-20 Mon> 
DEADLINE: <2015-04-20 Mon 23:59> 
** TODO Sprint #3
SCHEDULED: <2015-04-20 Mon>--<2015-04-27 Mon> 
DEADLINE: <2015-04-27 Mon 23:59> 
** TODO Sprint #4
SCHEDULED: <2015-04-27 Mon>--<2015-05-05 Tue> 
DEADLINE: <2015-05-05 Tue 23:59> 
** TODO All Deliverables
SCHEDULED: <2015-05-05 Tue 23:59> 
DEADLINE: <2015-05-05 Tue 23:59> 
** TODO Final Presentation
SCHEDULED: <2015-05-11 Mon 10:30-12:30> 
DEADLINE: <2015-05-11 Mon 10:30-12:30>

\pagebreak

* Design Choices
** C++14
- Use =build.tamu.edu=
  - =gcc-4.9.2= (add =share/examples/bashrc= to your =~/.bashrc=)
  - linux =x86_64=
** Big Integers
- We need to be able to store integers \geq 4096 bits
- C++'s =uintmax_t= can only store integers \leq (2^64-1) so we need a way of storing these big integers
*** [[https://gmplib.org][The GNU Multiple Precision Arithmetic Library]]
** [[https://code.google.com/p/googletest/][Google Test]]
- TDD Proof
  - travis-ci build logs
** [[http://travis-ci.org][travis-ci]]
- Requires committing and *pushing* [fn:: Shouldn't be a problem except for Chris] failing tests (so =travis-ci= builds and runs them)
- Gives us time-stamped builds and test runs for *every* commit and pull-request
** [[https://github.com/nvie/gitflow][git flow]]
- Makes following the git-flow branching model stupidly easy
- Use =feature/FEATURE_NAME= branches for new additions
  - keep these specific and small
- When a feature is done, create a pull request
  - allows travis to test if your branch builds
  - allows the rest of the group to discuss the feature

\pagebreak

* Deliverables

** =munchkinsteg=
- embed ciphertext into bmp
- extract ciphertext from bmp
- *MUST* support /at-least/ 1-LSB and 2-LSB, but may include other modes
- report PSNR (peak signal to noise ratio) of stego-image
** =toto=
- implements /at-least/ 3 attacks on LSB image steganography systems

\pagebreak

* Requirements
** Workflows
*** Agile
- 1-week sprints
  - At beginning of each week:
    - Choose features from product back-log to include in this sprint
  - At end of each week:
    - Unfinished tasks go back in back-log
    - Demonstrate sprint's result to TA
    - Submit to =CSNet=:
      - Backlogs
      - Burn-down Charts
      - Sprint Status Charts
- 4 scrums/week
  - Ask each group member (and record):
    1. "What have you done since last scrum meeting?"
    2. "What do you plan on doing between now and next scrum?"
    3. "What has impeded your work?"
  - At end of meeting:
    - Each team-member should update burn-down chart:
      - remaining effort for each task
      - status of tasks
- As soon as product is finished submit to =CSNet=
*** TDD
- Provide proof
** Features 
*** Encryption
- Encrypt to cipher-text
- Embed cipher-text in a =.bmp= image
*** Decryption
*** Crack

\pagebreak

* Rubric                                                           :noexport:

** RSA Cryptosystem (15 pts)

#+BEGIN_COMMENT
 - Generate random primes with approximately k bits, for \( 16 \leq k \leq 512 \) 
 - Generate correct public and private keys for k-bit moduli, for \( 32 \leq k \leq 1024 \) 
 - Verify \(D_K (E_K (M)) = E_K (D_K (M)) = M\) using team's own implementation 
 - Verify using the openssl command line tool: 
   - Correct encryption of a single block 
   - Correct decryption of a single block 
   - Correct encryption of multiple blocks 
   - Correct decryption of multiple blocks
#+END_COMMENT
** Attacks on RSA (15 pts) 

#+BEGIN_COMMENT
- At least 3 working attacks on RSA 
#+END_COMMENT
** LSB image stegosystem (15 pts) 

#+BEGIN_COMMENT
- Correct embedding of bits in the 1-LSB plane 
- Correct extraction of bits from the 1-LSB plane 
- Correct embedding of bits in the 2-LSB plane 
- Correct extraction of bits from the 2-LSB plane 
- Colors: Grayscale and RGB 
- Correct PSNR reported 
#+END_COMMENT
** Attacks on LSB image stego: (15 pts) 
#+BEGIN_COMMENT
- At least 3 working attacks on LSB image stego 
#+END_COMMENT
** Weekly Sprint progress reports: (20 pts) 
#+BEGIN_COMMENT
- 5 points per week 
- Include Backlogs, Burndown Charts, and Sprint Status Checks 
#+END_COMMENT
** Final Presentation (20 pts) 
#+BEGIN_COMMENT
- Demonstrate tools for 
- Encryption, Decryption, Embedding, Extracting, Cryptanalysis, Steganalysis 
- Proof of Test-Driven Development 
- Do not exceed 10 minutes
#+END_COMMENT

